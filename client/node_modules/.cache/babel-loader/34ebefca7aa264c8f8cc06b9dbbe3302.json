{"ast":null,"code":"import axios from 'axios';\nexport function getInfo() {\n  return async dispatch => {\n    let json = await axios.get('http://localhost:3001/challenge');\n    console.log(json.data);\n    return dispatch({\n      type: 'GET_INFO',\n      payload: json.data\n    });\n  };\n}\nexport function registerOperation(payload) {\n  return async () => {\n    let json = await axios.post('http://localhost:3001/challenge', payload);\n    return json;\n  };\n}","map":{"version":3,"names":["axios","getInfo","dispatch","json","get","console","log","data","type","payload","registerOperation","post"],"sources":["C:/Users/bruni/OneDrive/Escritorio/ABM series/alkemyChallenge/client/src/actions/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\nexport function getInfo(){ \r\n    return async (dispatch)=>{\r\n        let json = await axios.get('http://localhost:3001/challenge')\r\n        console.log(json.data)\r\n        return dispatch({\r\n            type: 'GET_INFO',\r\n            payload: json.data\r\n        })        \r\n    }    \r\n}\r\n\r\nexport function registerOperation(payload){\r\n    return async () => {\r\n        let json = await axios.post('http://localhost:3001/challenge', payload);\r\n        return json;        \r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAO,SAASC,OAAO,GAAE;EACrB,OAAO,MAAOC,QAAQ,IAAG;IACrB,IAAIC,IAAI,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,iCAAiC,CAAC;IAC7DC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,IAAI,CAAC;IACtB,OAAOL,QAAQ,CAAC;MACZM,IAAI,EAAE,UAAU;MAChBC,OAAO,EAAEN,IAAI,CAACI;IAClB,CAAC,CAAC;EACN,CAAC;AACL;AAEA,OAAO,SAASG,iBAAiB,CAACD,OAAO,EAAC;EACtC,OAAO,YAAY;IACf,IAAIN,IAAI,GAAG,MAAMH,KAAK,CAACW,IAAI,CAAC,iCAAiC,EAAEF,OAAO,CAAC;IACvE,OAAON,IAAI;EACf,CAAC;AACL"},"metadata":{},"sourceType":"module"}